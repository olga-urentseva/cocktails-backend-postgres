services:
  cocktails-backend-postgres-app:
    image: ghcr.io/olga-urentseva/cocktails-backend-postgres:${GIT_COMMIT_SHA}
    networks:
      - proxy
      - db
    environment:
      DATABASE_URL: "postgres://postgres:REDACTED@postgres:5432/postgres"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "PGPASSWORD='REDACTED' pg_isready -h postgres -U postgres || exit 1",
        ]
      interval: 10s # How often the status will be checked
      retries: 5 # How many times to check before exist (if unavailable)
      start_period: 10s # Time to wait before starting the first check
      timeout: 10s # Timeout for each test run
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.services.cocktails-backend-postgres.loadbalancer.server.port=9090"
        - "traefik.http.routers.cocktails-backend-postgres-web.rule=Host(`bartender-api.mooo.com`)"
        - "traefik.http.routers.cocktails-backend-postgres-web.entrypoints=web"
        - "traefik.http.routers.cocktails-backend-postgres-websecure.rule=Host(`bartender-api.mooo.com`)"
        - "traefik.http.routers.cocktails-backend-postgres-websecure.entrypoints=websecure"
        - "traefik.http.routers.cocktails-backend-postgres-websecure.tls=true"
        - "traefik.http.routers.cocktails-backend-postgres-websecure.tls.certresolver=letsencrypt"

        - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
        - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"
        - "traefik.http.routers.cocktails-backend-postgres-web.middlewares=redirect-to-https"

        - "traefik.http.middlewares.cors.headers.accesscontrolallowmethods=GET"
        - "traefik.http.middlewares.cors.headers.accesscontrolallowheaders=*"
        - "traefik.http.middlewares.cors.headers.accesscontrolalloworiginlist=*"
        - "traefik.http.routers.cocktails-backend-postgres-websecure.middlewares=cors"

      replicas: 2
      update_config:
        parallelism: 1
        order: start-first

networks:
  proxy:
    external: true
  db:
    external: true
